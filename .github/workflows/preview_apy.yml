name: Preview Dev Deployment

on:
  pull_request:
    branches:
      - master

env:
  V: '1'

concurrency:
  group: tests
  cancel-in-progress: false

jobs:
  test-api:
    env:
      working-directory: ./django_api/api
    services:
      # Label used to access the service container
      postgres:
        ports:
          - 5432:5432
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #      - name: Test api
      #        run: |
      #          make test-api
      #        env:
      #          DB_PASSWORD: postgres
      #          DB_HOST: postgres
      #          DB_NAME: github_actions
      #          DB_USER: postgres
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r django_api/requirements.txt
      - name: ls
        working-directory: ${{env.working-directory}}
        run: ls -R
      - name: Make migrations
        working-directory: ${{env.working-directory}}
        run: python manage.py makemigrations
      - name: ls
        working-directory: ${{env.working-directory}}
        run: ls -R
      - name: Run migrations
        working-directory: ${{env.working-directory}}
        run: python manage.py migrate
      - name: Run tests
        working-directory: ${{env.working-directory}}
        run: pytest

  lint-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint api
        run: |
          make lint-api
  typecheck-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Typecheck api
        run: |
          make typecheck-api
